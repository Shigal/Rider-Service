{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\RiderServie\\\\riderfrontend\\\\src\\\\pages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { authenticate, authSuccess, authFailure } from \"../redux/authActions\";\nimport { userLogin } from \"../services/authService\";\nimport { Form, Input, Button, Alert, Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = _ref => {\n  _s();\n\n  let {\n    loading,\n    error,\n    ...props\n  } = _ref;\n  const [values, setValues] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleSubmit = e => {\n    // e.preventDefault();\n    props.authenticate();\n    userLogin(values).then(response => {\n      console.log(\"response:\", response);\n\n      if (response.status === 200) {\n        props.setUser(response.data);\n        props.history.push('/dashboard');\n      } else {\n        props.loginFailure(\"Something went wrong, Try again!\");\n      }\n    }).catch(error => {\n      if (error && error.response) {\n        if (error.response.status === 401) {\n          console.log(\"Status: 401\");\n          props.loginFailure(\"Bad credentials, authentication failed !\");\n        } else {\n          props.loginFailure(\"Something went wrong, Try again!\");\n        }\n      } else {\n        props.loginFailure(\"Something went wrong, Try again!\");\n      }\n    });\n  }; // const handleChange = (e) => {\n  //     e.persist();\n  //     setValues(values => ({\n  //     ...values,\n  //     [e.target.name]: e.target.value\n  //     }));\n  // };\n\n\n  const handleChange = e => {\n    setValues(values => {\n      return { ...values,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  console.log(\"Loading \", loading); //     const error = error ? <Row>\n  //     <Col span=\"8\"></Col>\n  //     <Col span=\"8\">\n  //       <Alert message=\"Authentication Failed\" type=\"warning\"></Alert>\n  //     </Col>\n  //   </Row> : ''\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      onFinish: handleSubmit,\n      labelCol: {\n        span: 8,\n        padding: 20\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      } //   onFinish={onFinish}\n      //   onFinishFailed={onFinishFailed}\n      ,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\" // value={values.username}\n        ,\n        onFieldsChange: handleChange,\n        initialValue: values.username,\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\" // value={values.password}\n        ,\n        onFieldsChange: handleChange,\n        initialValue: values.password,\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: [\"Login\", loading && /*#__PURE__*/_jsxDEV(Spin, {\n            animation: \"border\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"warning\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"/890OdEeZqzGXIm7+62KsXphobg=\");\n\n_c = LoginPage;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    auth\n  } = _ref2;\n  console.log(\"state \", auth);\n  return {\n    loading: auth.loading,\n    error: auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: () => dispatch(authenticate()),\n    setUser: data => dispatch(authSuccess(data)),\n    loginFailure: message => dispatch(authFailure(message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/RiderServie/riderfrontend/src/pages/LoginPage.js"],"names":["React","useState","connect","authenticate","authSuccess","authFailure","userLogin","Form","Input","Button","Alert","Spin","LoginPage","loading","error","props","values","setValues","username","password","handleSubmit","e","then","response","console","log","status","setUser","data","history","push","loginFailure","catch","handleChange","target","name","value","span","padding","remember","required","message","offset","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React, {useState} from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport { authenticate, authSuccess, authFailure } from \"../redux/authActions\";\r\nimport { userLogin } from \"../services/authService\"\r\nimport { Form, Input, Button, Alert, Spin } from 'antd';\r\n\r\n\r\n\r\nconst LoginPage = ({loading, error, ...props}) => {\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        // e.preventDefault();\r\n        props.authenticate();\r\n\r\n        userLogin(values).then((response) => {\r\n            console.log(\"response:\", response);\r\n            \r\n            if(response.status === 200) {\r\n                props.setUser(response.data);\r\n                props.history.push('/dashboard');\r\n            }\r\n            else {\r\n                props.loginFailure(\"Something went wrong, Try again!\")\r\n            }\r\n        }).catch((error) => {\r\n            if(error && error.response) {\r\n                if(error.response.status === 401) {\r\n                    console.log(\"Status: 401\");\r\n                    props.loginFailure(\"Bad credentials, authentication failed !\");\r\n                }\r\n                else {\r\n                    props.loginFailure(\"Something went wrong, Try again!\");\r\n                }\r\n            }\r\n            else {\r\n                props.loginFailure(\"Something went wrong, Try again!\");\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    // const handleChange = (e) => {\r\n    //     e.persist();\r\n    //     setValues(values => ({\r\n    //     ...values,\r\n    //     [e.target.name]: e.target.value\r\n    //     }));\r\n    // };\r\n\r\n    const handleChange = (e) => {\r\n        setValues(values => {\r\n            return {...values, [e.target.name]: e.target.value}\r\n        });\r\n    }\r\n\r\n    console.log(\"Loading \",loading);\r\n\r\n//     const error = error ? <Row>\r\n//     <Col span=\"8\"></Col>\r\n//     <Col span=\"8\">\r\n//       <Alert message=\"Authentication Failed\" type=\"warning\"></Alert>\r\n//     </Col>\r\n//   </Row> : ''\r\n\r\n    return(\r\n        <div className=\"form\">\r\n            <Form\r\n        name=\"basic\"\r\n        onFinish={handleSubmit}\r\n        labelCol={{\r\n            span: 8,\r\n            padding: 20,\r\n        }}\r\n        wrapperCol={{\r\n            span: 16,\r\n        }}\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n        //   onFinish={onFinish}\r\n        //   onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n        <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            // value={values.username}\r\n            onFieldsChange={handleChange}\r\n            initialValue={values.username}\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            // value={values.password}\r\n            onFieldsChange={handleChange}\r\n            initialValue={values.password}\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input.Password />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n            name=\"remember\"\r\n            valuePropName=\"checked\"\r\n            wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n            }}\r\n        >\r\n            <Checkbox>Remember me</Checkbox>    \r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n            wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n            }}\r\n        >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n            Login\r\n            {loading && (<Spin animation=\"border\" aria-hidden=\"true\"/>)}\r\n            </Button>\r\n        </Form.Item>\r\n\r\n        { error && <Alert type=\"warning\">{error}</Alert> }\r\n\r\n        </Form>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps=({auth})=>{\r\n    console.log(\"state \",auth)\r\n    return {\r\n        loading:auth.loading,\r\n        error:auth.error\r\n}}\r\n\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return {\r\n        authenticate :()=> dispatch(authenticate()),\r\n        setUser:(data)=> dispatch(authSuccess(data)),\r\n        loginFailure:(message)=>dispatch(authFailure(message))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}