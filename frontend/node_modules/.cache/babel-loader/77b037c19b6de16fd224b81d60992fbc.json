{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\RiderServie\\\\riderfrontend\\\\src\\\\pages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { authenticate, authSuccess, authFailure } from \"../redux/authActions\";\nimport { userLogin } from \"../services/authService\";\nimport { Form, Input, Button, Checkbox, Alert, Spin } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = _ref => {\n  _s();\n\n  let {\n    loading,\n    error,\n    ...props\n  } = _ref;\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleSubmit = e => {\n    console.log(\"onFinish\", e);\n    values.username = e.username;\n    values.password = e.password;\n    props.authenticate(); // e.preventDefault();\n    // props.authenticate();\n\n    userLogin(values).then(response => {\n      console.log(\"response:\", response.data);\n\n      if (response.status === 200) {\n        console.log(\"response:data--\", response.data);\n        props.setUser(response.data); // props.setUser(values);\n\n        navigate(\"/dashboard\");\n      } else {\n        props.loginFailure(\"Something went wrong, Try again!\");\n      }\n    }).catch(error => {\n      if (error && error.response) {\n        if (error.response.status === 401) {\n          console.log(\"Status: 401\");\n          props.loginFailure(\"Bad credentials, authentication failed !\");\n        } else {\n          props.loginFailure(\"Something went wrong, Try again!\");\n        }\n      } else {\n        props.loginFailure(\"Something went wrong, Try again!\");\n      }\n    });\n  }; // const handleChange = (e) => {\n  //     e.persist();\n  //     setValues(values => ({\n  //     ...values,\n  //     [e.target.name]: e.target.value\n  //     }));\n  // };\n  // const handleChange = (e) => {\n  //     setValues(values => {\n  //         return {...values, [e.target.name]: e.target.value}\n  //     });\n  // }\n\n\n  console.log(\"Loading \", loading); //     const error = error ? <Row>\n  //     <Col span=\"8\"></Col>\n  //     <Col span=\"8\">\n  //       <Alert message=\"Authentication Failed\" type=\"warning\"></Alert>\n  //     </Col>\n  //   </Row> : ''\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      onFinish: handleSubmit,\n      labelCol: {\n        span: 8,\n        padding: 20\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      },\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: [\"Login\", loading && /*#__PURE__*/_jsxDEV(Spin, {\n            animation: \"border\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"warning\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"r1GCxUt7zSTLlkNB562fqeKBDHc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    auth\n  } = _ref2;\n  console.log(\"state \", auth);\n  return {\n    loading: auth.loading,\n    error: auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: () => dispatch(authenticate()),\n    setUser: data => dispatch(authSuccess(data)),\n    loginFailure: message => dispatch(authFailure(message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage); // export default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/RiderServie/riderfrontend/src/pages/LoginPage.js"],"names":["React","useState","connect","authenticate","authSuccess","authFailure","userLogin","Form","Input","Button","Checkbox","Alert","Spin","useNavigate","LoginPage","loading","error","props","navigate","values","setValues","username","password","handleSubmit","e","console","log","then","response","data","status","setUser","loginFailure","catch","span","padding","remember","required","message","offset","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React, {useState} from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport { authenticate, authSuccess, authFailure } from \"../redux/authActions\";\r\nimport { userLogin } from \"../services/authService\"\r\nimport { Form, Input, Button, Checkbox, Alert, Spin } from 'antd';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst LoginPage = ({loading, error, ...props}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        console.log(\"onFinish\", e);\r\n        values.username = e.username;\r\n        values.password = e.password;\r\n        props.authenticate();\r\n        // e.preventDefault();\r\n        // props.authenticate();\r\n\r\n        userLogin(values).then((response) => {\r\n            console.log(\"response:\", response.data);\r\n            \r\n            if(response.status === 200) {\r\n                console.log(\"response:data--\", response.data);\r\n                props.setUser(response.data);\r\n                // props.setUser(values);\r\n                navigate(\"/dashboard\");\r\n\r\n            }\r\n            else {\r\n                props.loginFailure(\"Something went wrong, Try again!\")\r\n            }\r\n        }).catch((error) => {\r\n            if(error && error.response) {\r\n                if(error.response.status === 401) {\r\n                    console.log(\"Status: 401\");\r\n                    props.loginFailure(\"Bad credentials, authentication failed !\");\r\n                }\r\n                else {\r\n                    props.loginFailure(\"Something went wrong, Try again!\");\r\n                }\r\n            }\r\n            else {\r\n                props.loginFailure(\"Something went wrong, Try again!\");\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    // const handleChange = (e) => {\r\n    //     e.persist();\r\n    //     setValues(values => ({\r\n    //     ...values,\r\n    //     [e.target.name]: e.target.value\r\n    //     }));\r\n    // };\r\n\r\n    // const handleChange = (e) => {\r\n    //     setValues(values => {\r\n    //         return {...values, [e.target.name]: e.target.value}\r\n    //     });\r\n    // }\r\n\r\n    console.log(\"Loading \",loading);\r\n\r\n//     const error = error ? <Row>\r\n//     <Col span=\"8\"></Col>\r\n//     <Col span=\"8\">\r\n//       <Alert message=\"Authentication Failed\" type=\"warning\"></Alert>\r\n//     </Col>\r\n//   </Row> : ''\r\n\r\n    return(\r\n        <div className=\"form\">\r\n            <Form\r\n        name=\"basic\"\r\n        onFinish={handleSubmit}\r\n        labelCol={{\r\n            span: 8,\r\n            padding: 20,\r\n        }}\r\n        wrapperCol={{\r\n            span: 16,\r\n        }}\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          autoComplete=\"off\"\r\n        >\r\n        <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input placeholder=\"Username\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input.Password placeholder=\"Password\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            name=\"remember\"\r\n            valuePropName=\"checked\"\r\n            wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n            }}\r\n        >\r\n            <Checkbox>Remember me</Checkbox>    \r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n            }}\r\n        >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n            Login\r\n            {loading && (<Spin animation=\"border\" aria-hidden=\"true\"/>)}\r\n            </Button>\r\n        </Form.Item>\r\n\r\n        { error && <Alert type=\"warning\">{error}</Alert> }\r\n\r\n        </Form>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps=({auth})=>{\r\n    console.log(\"state \",auth)\r\n    return {\r\n        loading:auth.loading,\r\n        error:auth.error\r\n}}\r\n\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return {\r\n        authenticate :()=> dispatch(authenticate()),\r\n        setUser:(data)=> dispatch(authSuccess(data)),\r\n        loginFailure:(message)=>dispatch(authFailure(message))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginPage);\r\n\r\n// export default LoginPage;"]},"metadata":{},"sourceType":"module"}