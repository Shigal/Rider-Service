{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\RiderServie\\\\riderfrontend\\\\src\\\\pages\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { userRegister } from '../services/authService';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Input, Button, Alert, Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = _ref => {\n  _s();\n\n  let {\n    loading,\n    error,\n    ...props\n  } = _ref;\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    nusername: '',\n    nemail: '',\n    npassword: ''\n  });\n\n  const handleSubmit = e => {\n    values.nusername = e.username;\n    values.nemail = e.email;\n    values.npassword = e.password;\n    userRegister(values).then(response => {\n      if (response.status === 200) {\n        props.setUser(response.data);\n        navigate(\"/login\");\n      } else {//\n      }\n    }).catch(error => {//\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"userForm\",\n      onFinish: handleSubmit,\n      labelCol: {\n        span: 8,\n        padding: 20\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      } //   onFinish={onFinish}\n      //   onFinishFailed={onFinishFailed}\n      ,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\" // value={values.username}\n        // onFieldsChange={handleChange}\n        // initialValue={values.username}\n        ,\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\" // value={values.password}\n        // onFieldsChange={handleChange}\n        // initialValue={values.password}\n        ,\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\" // value={values.password}\n        // onFieldsChange={handleChange}\n        // initialValue={values.password}\n        ,\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: [\"Register\", loading && /*#__PURE__*/_jsxDEV(Spin, {\n            animation: \"border\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"warning\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"fTAYsQ0XVaWn98+2wR/k3LFIQAg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/RiderServie/riderfrontend/src/pages/RegisterPage.js"],"names":["useState","userRegister","useNavigate","Form","Input","Button","Alert","Spin","RegisterPage","loading","error","props","navigate","values","setValues","nusername","nemail","npassword","handleSubmit","e","username","email","password","then","response","status","setUser","data","catch","span","padding","remember","required","message","offset"],"mappings":"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","sourcesContent":["import {useState} from 'react'\r\nimport { userRegister } from '../services/authService';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Input, Button, Alert, Spin } from 'antd';\r\n\r\nconst RegisterPage = ({loading, error, ...props}) => {\r\n\r\n    const navigate = useNavigate();\r\n    const [values, setValues] = useState({\r\n        nusername: '',\r\n        nemail: '',\r\n        npassword: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        values.nusername = e.username;\r\n        values.nemail = e.email;\r\n        values.npassword = e.password;\r\n\r\n        userRegister(values).then((response) => {\r\n            if(response.status === 200) {\r\n                props.setUser(response.data)\r\n                navigate(\"/login\")\r\n            }\r\n            else {\r\n                //\r\n            }\r\n        }).catch((error) => {\r\n            //\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"form\">\r\n            <Form\r\n        name=\"userForm\"\r\n        onFinish={handleSubmit}\r\n        labelCol={{\r\n            span: 8,\r\n            padding: 20,\r\n        }}\r\n        wrapperCol={{\r\n            span: 16,\r\n        }}\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n        //   onFinish={onFinish}\r\n        //   onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n        <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            // value={values.username}\r\n            // onFieldsChange={handleChange}\r\n            // initialValue={values.username}\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input placeholder=\"Username\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            // value={values.password}\r\n            // onFieldsChange={handleChange}\r\n            // initialValue={values.password}\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input your email!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input placeholder=\"Email\" />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            // value={values.password}\r\n            // onFieldsChange={handleChange}\r\n            // initialValue={values.password}\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input.Password placeholder=\"Password\" />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n            name=\"remember\"\r\n            valuePropName=\"checked\"\r\n            wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n            }}\r\n        >\r\n            <Checkbox>Remember me</Checkbox>    \r\n        </Form.Item> */}\r\n\r\n        <Form.Item\r\n            wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n            }}\r\n        >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n            {loading && (<Spin animation=\"border\" aria-hidden=\"true\"/>)}\r\n            </Button>\r\n        </Form.Item>\r\n\r\n        { error && <Alert type=\"warning\">{error}</Alert> }\r\n\r\n        </Form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}