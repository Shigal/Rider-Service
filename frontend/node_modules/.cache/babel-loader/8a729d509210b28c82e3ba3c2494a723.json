{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\RiderServie\\\\riderfrontend\\\\src\\\\pages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { authenticate, authFailure, authSuccess } from '../redux/authActions';\nimport './loginpage.css';\nimport { userLogin } from '../api/authenticationService';\nimport { Alert, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = _ref => {\n  _s();\n\n  let {\n    loading,\n    error,\n    ...props\n  } = _ref;\n  const [values, setValues] = useState({\n    userName: '',\n    password: ''\n  });\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    props.authenticate();\n    userLogin(values).then(response => {\n      console.log(\"response\", response);\n\n      if (response.status === 200) {\n        props.setUser(response.data);\n        props.history.push('/dashboard');\n      } else {\n        props.loginFailure('Something Wrong!Please Try Again');\n      }\n    }).catch(err => {\n      if (err && err.response) {\n        switch (err.response.status) {\n          case 401:\n            console.log(\"401 status\");\n            props.loginFailure(\"Authentication Failed.Bad Credentials\");\n            break;\n\n          default:\n            props.loginFailure('Something Wrong!Please Try Again');\n        }\n      } else {\n        props.loginFailure('Something Wrong!Please Try Again');\n      }\n    }); //console.log(\"Loading again\",loading);\n  };\n\n  const handleChange = e => {\n    e.persist();\n    setValues(values => ({ ...values,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  console.log(\"Loading \", loading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-md-center h-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card fat\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"my-login-validation\",\n                  onSubmit: handleSubmit,\n                  noValidate: false,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"User Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"username\",\n                      type: \"text\",\n                      className: \"form-control\",\n                      minLength: 5,\n                      value: values.userName,\n                      onChange: handleChange,\n                      name: \"userName\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: \"UserId is invalid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: \"forgot.html\",\n                        className: \"float-right\",\n                        children: \"Forgot Password?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"password\",\n                      type: \"password\",\n                      className: \"form-control\",\n                      minLength: 8,\n                      value: values.password,\n                      onChange: handleChange,\n                      name: \"password\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: \"Password is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"custom-control custom-checkbox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        className: \"custom-control-input\",\n                        id: \"customCheck1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"custom-control-label\",\n                        htmlFor: \"customCheck1\",\n                        children: \"Remember me\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group m-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary\",\n                      children: [\"Login\", loading && /*#__PURE__*/_jsxDEV(Spinner, {\n                        as: \"span\",\n                        animation: \"border\",\n                        size: \"sm\",\n                        role: \"status\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 29\n                }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n                  style: {\n                    marginTop: '20px'\n                  },\n                  variant: \"danger\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"BSr54SbhcmJhSbkfyVzKmv8Vypk=\");\n\n_c = LoginPage;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    auth\n  } = _ref2;\n  console.log(\"state \", auth);\n  return {\n    loading: auth.loading,\n    error: auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: () => dispatch(authenticate()),\n    setUser: data => dispatch(authSuccess(data)),\n    loginFailure: message => dispatch(authFailure(message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/RiderServie/riderfrontend/src/pages/LoginPage.js"],"names":["react","useState","connect","authenticate","authFailure","authSuccess","userLogin","Alert","Spinner","LoginPage","loading","error","props","values","setValues","userName","password","handleSubmit","evt","preventDefault","then","response","console","log","status","setUser","data","history","push","loginFailure","catch","err","handleChange","e","persist","target","name","value","marginTop","mapStateToProps","auth","mapDispatchToProps","dispatch","message"],"mappings":"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","sourcesContent":["import react,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authenticate, authFailure, authSuccess } from '../redux/authActions';\r\nimport './loginpage.css';\r\nimport {userLogin} from '../api/authenticationService';\r\nimport {Alert,Spinner} from 'react-bootstrap';\r\n\r\nconst LoginPage=({loading,error,...props})=>{\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        userName: '',\r\n        password: ''\r\n        });\r\n\r\n    const handleSubmit=(evt)=>{\r\n        evt.preventDefault();\r\n        props.authenticate();\r\n\r\n        userLogin(values).then((response)=>{\r\n\r\n            console.log(\"response\",response);\r\n            if(response.status===200){\r\n                props.setUser(response.data);\r\n                props.history.push('/dashboard');\r\n            }\r\n            else{\r\n               props.loginFailure('Something Wrong!Please Try Again'); \r\n            }\r\n\r\n\r\n        }).catch((err)=>{\r\n\r\n            if(err && err.response){\r\n            \r\n            switch(err.response.status){\r\n                case 401:\r\n                    console.log(\"401 status\");\r\n                    props.loginFailure(\"Authentication Failed.Bad Credentials\");\r\n                    break;\r\n                default:\r\n                    props.loginFailure('Something Wrong!Please Try Again'); \r\n\r\n            }\r\n\r\n            }\r\n            else{\r\n                props.loginFailure('Something Wrong!Please Try Again');\r\n            }\r\n                \r\n\r\n            \r\n\r\n        });\r\n        //console.log(\"Loading again\",loading);\r\n\r\n        \r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setValues(values => ({\r\n        ...values,\r\n        [e.target.name]: e.target.value\r\n        }));\r\n    };\r\n\r\n    console.log(\"Loading \",loading);\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n                   \r\n              \r\n                                            \r\n        <section className=\"h-100\">\r\n        <div className=\"container h-100\">\r\n       \r\n            <div className=\"row justify-content-md-center h-100\">\r\n                <div className=\"card-wrapper\">\r\n\r\n                    <div className=\"card fat\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Login</h4>\r\n                            \r\n                            <form className=\"my-login-validation\" onSubmit={handleSubmit} noValidate={false}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">User Name</label>\r\n                                    <input id=\"username\" type=\"text\" className=\"form-control\" minLength={5} value={values.userName} onChange={handleChange} name=\"userName\" required />\r\n                                    \r\n                                        <div className=\"invalid-feedback\">\r\n                                            UserId is invalid\r\n                                        </div>\r\n                                    \r\n                                    \r\n                                    \r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Password\r\n                                        <a href=\"forgot.html\" className=\"float-right\">\r\n                                            Forgot Password?\r\n                                        </a>\r\n                                    </label>\r\n                                    <input id=\"password\" type=\"password\" className=\"form-control\" minLength={8} value={values.password} onChange={handleChange} name=\"password\" required/>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        Password is required\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                                     </div>\r\n                                </div>\r\n                                \r\n\r\n                                <div className=\"form-group m-0\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                                        Login\r\n                                        {loading && (\r\n                                            <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"border\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                          />\r\n                                        )}\r\n                                        {/* <ClipLoader\r\n                                        //css={override}\r\n                                        size={20}\r\n                                        color={\"#123abc\"}\r\n                                        loading={loading}\r\n                                        /> */}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            { error &&\r\n                            <Alert style={{marginTop:'20px'}} variant=\"danger\">\r\n                                    {error}\r\n                                </Alert>\r\n\r\n                            }\r\n                            \r\n        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n}\r\n\r\nconst mapStateToProps=({auth})=>{\r\n    console.log(\"state \",auth)\r\n    return {\r\n        loading:auth.loading,\r\n        error:auth.error\r\n}}\r\n\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return {\r\n        authenticate :()=> dispatch(authenticate()),\r\n        setUser:(data)=> dispatch(authSuccess(data)),\r\n        loginFailure:(message)=>dispatch(authFailure(message))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}